<?xml version="1.0" encoding="UTF-8" ?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.SecureTrading.app</groupId>
  <artifactId>JSPaymentsInterface</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <name>JSPaymentsInterface</name>
  <url>https://www.securetrading.com/</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <cucumber.jvm.parallel.version>5.0.0</cucumber.jvm.parallel.version>
    <surefire.maven.plugin.version>3.0.0-M3</surefire.maven.plugin.version>
    <cucumber.java.version>4.8.0</cucumber.java.version>
    <cucumber.junit.version>5.3.0</cucumber.junit.version>
    <selenium.java.version>3.141.59</selenium.java.version>
    <junit.jupiter.api.version>5.5.2</junit.jupiter.api.version>
    <commons.io.version>2.6</commons.io.version>
    <lombok.version>1.18.10</lombok.version>
    <pico.container.version>2.15</pico.container.version>
    <commons.lang.version>3.8.1</commons.lang.version>
    <wiremock.version>2.25.1</wiremock.version>
    <rest.assured.version>4.1.2</rest.assured.version>
    <jackson.databind>2.10.0</jackson.databind>
    <acceptance.test.parallel.count>5</acceptance.test.parallel.count>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>${cucumber.java.version}</version>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <version>${cucumber.junit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.java.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.api.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <groupId>org.picocontainer</groupId>
      <artifactId>picocontainer</artifactId>
      <version>${pico.container.version}</version>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest.assured.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.databind}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1.1</version>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>acceptance-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <forkCount>${acceptance.test.parallel.count}</forkCount>
              <reuseForks>true</reuseForks>
              <includes>
                <include>**/*IT.class</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/test-classes/com/SecureTrading/cucumberjvm</outputDirectory>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.temyers</groupId>
        <artifactId>cucumber-jvm-parallel-plugin</artifactId>
        <version>${cucumber.jvm.parallel.version}</version>
        <executions>
          <execution>
            <id>generateRunners</id>
            <phase>validate</phase>
            <goals>
              <goal>generateRunners</goal>
            </goals>
            <configuration>
              <!-- Mandatory -->
              <!-- comma separated list of package names to scan for glue code -->
              <glue>com.SecureTrading.stepdefs</glue>
              <!-- These are the default values -->
              <!-- Where to output the generated Junit tests -->
              <outputDirectory>${project.build.directory}/generated-test-sources/resources.features</outputDirectory>
              <!-- The diectory containing your feature files.  -->
              <featuresDirectory>src/test/java/resources/features</featuresDirectory>
              <cucumberOutputDir>${project.build.directory}/cucumber_reports/test_results</cucumberOutputDir>
              <!-- comma separated list of output formats -->
              <format>html</format>
              <!-- CucumberOptions.strict property -->
              <strict>true</strict>
              <!-- CucumberOptions.monochrome property -->
              <monochrome>true</monochrome>
              <!-- The tags to run, maps to CucumberOptions.tags property -->
              <tags>
                <tag>@ignored</tag>
              </tags>
              <parallelScheme>FEATURE</parallelScheme>
              <namingScheme>pattern</namingScheme>
              <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
              <namingPattern>{f}_Parallel{c}IT</namingPattern>
              
              <!-- If set to true, only feature files containing the required tags shall be generated. -->
              <!-- Excluded tags (~@notMe) are ignored. -->
              <!--<filterFeaturesByTags>true</filterFeaturesByTags> -->
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>